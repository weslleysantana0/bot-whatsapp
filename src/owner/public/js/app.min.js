if(document.getElementById('ip')){
    fetch('https://api.ipify.org/?format=json').then(async (res) => {
        const json = await res.json()
        document.getElementById('ip').innerHTML = json.ip
    })
}
fetch('/api/info-bot').then(async (res) => {
    const json = await res.json()
    document.getElementById('profile_pic').srcset = json.profile_picture
    document.getElementsByClassName('sidebar-user__title')[0].innerHTML = json.name
    document.getElementsByClassName('sidebar-user__subtitle')[0].innerHTML = json.number
    if(document.getElementsByClassName('stat-cards').length > 0) {
        document.getElementById('chats_num').innerHTML = json.chats
        document.getElementById('groups_num').innerHTML = json.groupCount
        document.getElementById('mod_num').innerHTML = json.moderators
    }
    executeScript()
})

if(document.getElementsByClassName('table-info-gp').length > 0) {
    fetch('/api/info-groups').then(async (res) => {
        const json = await res.json()
        var pos = 0
        for(let obj of json) {
            document.getElementsByClassName('posts-table')[0].children[1].innerHTML += `<tr>
<td>
    <label class="users-table__checkbox">
    <div class="categories-table-img">
        <picture><source srcset="${obj.profile_picture}" type="image/webp"><img src="" alt="category"></picture>
    </div>
    </label>
</td>
<td>${obj.subject}</td>
<td>
    <div class="pages-table-img">
    <picture><source srcset="${obj.owner_pp}" type="image/webp"><img src="" alt="User Name"></picture>
    ${(obj.owner ? obj.owner.split('@')[0] : 'Não possui')}
    </div>
</td>
<td style="text-align: center;">${obj.participantsCounts}</td>
<td>
<span class="p-relative">
  <button class="dropdown-btn transparent-btn" type="button" title="More info">
    <div class="sr-only">More info</div>
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-horizontal" aria-hidden="true"><circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="12" r="1"></circle></svg>
  </button>
  <ul class="users-item-dropdown dropdown">
    <li><a style="color: #f26464" id="leave_${pos}" href="#">Sair do grupo</a></li>
  </ul>
</span>
</td>
</tr>`
            console.log('hi');
            document.getElementById(`leave_${pos}`).onclick = async function () {
                Swal.fire({
                    title: 'Tem certeza?',
                    text: `Seu bot está prestes a sair do grupo ${obj.subject}, deseja continuar?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sim'
                }).then((result) => {
                    if (result.isConfirmed) {
                        console.log(obj.id);
                        fetch('/api/leave', {
                            method: 'POST',
                            body: `jid=${obj.id}`,
                            headers: {
                                "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                            }
                        }).then(async (res) => {
                            if(res.status == 200) {
                                window.location.reload()
                                Swal.fire('Sucesso!', `O bot saiu do grupo ${obj.subject}`, 'success')
                            } else {
                                let json = await res.json()
                                Swal.fire('Falha ao sair do grupo!', json.msg, 'error')
                            }
                        })
                    }
                })
            }
            pos++
        }
        executeScript()
    })
}
var tools_json;
if(document.getElementsByClassName('table-tools').length > 0) {
    fetch('/api/get-tools').then(async (res) => {
        const json = await res.json();
        for(var i = 0; i < json.length; ++i) {
            var isActiveClass = json[i].active ? 'badge-active': 'badge-trashed'
            var ActiveStr = json[i].active ? 'Ativado': 'Desativado'
            document.getElementsByClassName('table-tools')[0].children[1].innerHTML += `<tr>
<td>
    <label class="switch">
    <input type="checkbox" class="slider_check" ${json[i].active ? 'checked' : ''}>
    <span class="slider" id="checkbox_${i}" onclick="changeStatus(${i})"></span>
    </label>
</td>
<td>${json[i].name}</td>
<td><span class="${isActiveClass}" id="status_${i}">${ActiveStr}</span></td>
</tr>`
        }
        tools_json = json
        executeScript()
    })
}

function changeStatus(index) {
    var className = document.getElementById(`status_${index}`).className
    var statusClass = className == 'badge-active' ? 'badge-trashed' : 'badge-active'
    var statusName = className == 'badge-active' ? 'Desativado' : 'Ativado'
    document.getElementById(`status_${index}`).classList.remove(className)
    document.getElementById(`status_${index}`).classList.add(statusClass)
    document.getElementById(`status_${index}`).innerHTML = statusName
    tools_json[index].active = (statusName == 'Desativado' ? false : true)
}

if(document.getElementById('save') && document.getElementById('reset')) {
    document.getElementById('save').onclick = function () {
        console.log(tools_json)
        fetch('/api/post-tools', {
            method: 'POST',
            body: `tools=${JSON.stringify(tools_json)}`,
            headers: {
                "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
            }
        }).then(async res => {
            const json = await res.json()
            if(json.msg == 'success') {
                Swal.fire({
                    title: "Salvo com sucesso!",
                    text: "",
                    color: '#eff0f6',
                    icon: "success",
                    button: "Ok",
                    background: '#161624',
                    confirmButtonColor: 'limegreen'
                })
            }
        })
    }
    
    document.getElementById('reset').onclick = async function () {
        var slidersCount = document.getElementsByClassName('slider_check').length
        const json_default = await fetch('/api/get-tools').then(async res => {return await res.json()})
        for(let i = 0; i < slidersCount; ++i) {
            if(json_default[i].active != document.getElementsByClassName('slider_check')[i].checked) {
                document.getElementsByClassName('slider')[i].click()
            }
        }
    }
}
document.getElementById('blockcmd').onclick = async function () {
    Swal.fire({
        title: 'Digite o comando que deseja bloquear',
        input: 'text',
        icon: 'info',
        inputAttributes: {
          autocapitalize: 'off'
        },
        confirmButtonText: 'Confirmar',
        showLoaderOnConfirm: true,
        preConfirm: (command) => {
          return fetch('/api/blockcmd', {
            method: 'POST',
            body: `cmd=${command}`,
            headers: {
                "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
            }}).then(async res => {
                if(res.status == 200) {
                    return Swal.fire(`Comando bloqueado com sucesso!`, '', 'success')
                } else {
                    let json = await res.json()
                    return Swal.fire(`Erro ao bloquear comando`, json.msg, 'error')
                }
            })
        },
        allowOutsideClick: () => !Swal.isLoading()
    })
}
document.getElementById('unblockcmd').onclick = async function () {
    Swal.fire({
        title: 'Digite o comando que deseja desbloquear',
        icon: 'info',
        input: 'text',
        inputAttributes: {
          autocapitalize: 'off'
        },
        confirmButtonText: 'Confirmar',
        showLoaderOnConfirm: true,
        preConfirm: (command) => {
          return fetch('/api/unblockcmd', {
            method: 'POST',
            body: `cmd=${command}`,
            headers: {
                "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
            }}).then(async res => {
                if(res.status == 200) {
                    return Swal.fire(`Comando desbloqueado com sucesso!`, '', 'success')
                } else {
                    let json = await res.json()
                    return Swal.fire(`Erro ao desbloquear comando`, json.msg, 'error')
                }
            })
        },
        allowOutsideClick: () => !Swal.isLoading()
    })
}
document.getElementById('block').onclick = async function () {
    Swal.fire({
        title: 'Digite o número que deseja bloquear',
        input: 'text',
        icon: 'info',
        inputAttributes: {
          autocapitalize: 'off'
        },
        confirmButtonText: 'Confirmar',
        showLoaderOnConfirm: true,
        preConfirm: (number) => {
          return fetch('/api/block', {
            method: 'POST',
            body: `number=${number}`,
            headers: {
                "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
            }}).then(async res => {
                if(res.status == 200) {
                    return Swal.fire(`Número bloqueado com sucesso!`, '', 'success')
                } else {
                    let json = await res.json()
                    return Swal.fire(`Erro ao bloquear número`, json.msg, 'error')
                }
            })
        },
        allowOutsideClick: () => !Swal.isLoading()
    })
}
document.getElementById('unblock').onclick = async function () {
    Swal.fire({
        title: 'Digite o número que deseja desbloquear',
        input: 'text',
        icon: 'info',
        inputAttributes: {
          autocapitalize: 'off'
        },
        confirmButtonText: 'Confirmar',
        showLoaderOnConfirm: true,
        preConfirm: (number) => {
          return fetch('/api/unblock', {
            method: 'POST',
            body: `number=${number}`,
            headers: {
                "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
            }}).then(async res => {
                if(res.status == 200) {
                    return Swal.fire(`Número desbloqueado com sucesso!`, '', 'success')
                } else {
                    let json = await res.json()
                    return Swal.fire(`Erro ao desbloquear número`, json.msg, 'error')
                }
            })
        },
        allowOutsideClick: () => !Swal.isLoading()
    })
}
document.getElementById('accept_invite').onclick = async function () {
    Swal.fire({
        title: 'Digite o link do grupo que deseja entrar',
        input: 'text',
        inputAttributes: {
          autocapitalize: 'off'
        },
        confirmButtonText: 'Confirmar',
        showLoaderOnConfirm: true,
        preConfirm: (link_invite) => {
          return fetch('/api/accept_group', {
            method: 'POST',
            body: `invite=${link_invite}`,
            headers: {
                "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
            }}).then(async res => {
                if(res.status == 200) {
                    return Swal.fire(`Entrou no grupo com sucesso!`, '', 'success')
                } else {
                    let json = await res.json()
                    return Swal.fire(`Erro ao entrar no grupo`, json.msg, 'error')
                }
            })
        },
        allowOutsideClick: () => !Swal.isLoading()
    })
}
document.getElementById('send_msg').onclick = async function () {
    Swal.fire({
        title: 'Enviar mensagem',
        html: `<input type="text" id="jid" class="swal2-input" placeholder="Número">
        <input type="text" id="msg" class="swal2-input" placeholder="Mensagem">`,
        confirmButtonText: 'Enviar',
        focusConfirm: false,
        preConfirm: () => {
            const jid = Swal.getPopup().querySelector('#jid').value
            const msg = Swal.getPopup().querySelector('#msg').value
            if (!jid || !msg) {
                Swal.showValidationMessage(`Insira o número q deseja enviar mensagem e a mensagem a ser enviada`)
            } else {
                fetch('/api/sendmess', {
                    method: 'POST',
                    body: `json=${JSON.stringify({jid, msg})}`,
                    headers: {
                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                    }
                }).then(async res => {
                    if(res.status == 200) {
                        Swal.fire('Mensagem enviada com sucesso!', '', 'success')
                    } else {
                        let json = await res.json()
                        Swal.fire('Falha ao enviar mensagem!', json.msg, 'success')
                    }
                })
            }
        }
    })
}